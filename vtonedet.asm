/* 
 * V2000 UA phone firmware for x51
 * made in 3 month by 19yo student in Ukraine at early 2000
 * Victor Kozub (C) Copyright 2000
 * https://github.com/xen1024
 */

;****************************TONE DETECT************************************
  name TnDtct
  public ToneDetect,TimerToneDecode
  $DEFFN ToneDetect(0,0,0,0,0,0,0,0)
  public BeepDetect
  $DEFFN BeepDetect(0,0,0,0,0,0,0,0)
  public ToneDebug
  $DEFFN ToneDebug(0,0,0,0,0,0,0,0),ToneDetect
  public ToneHighQualityDetect
  rseg CODE
#define __ToneDetect
$vdef.inc

  rseg CODE
;TIMER TONE DETECT
;16 - 0x92
;21 - 0x70
#define StartBuffTone stack_begin
;$LOCBD ToneDetect
;stack_begin-1
LenBuffTone = 0x10
#define EndBuffTone StartBuffTone+LenBuffTone
;X0368:  reti
#define AddrToneDetectLo StepTone1
#define AddrToneDetectHi StepTone1+1
#define TCXToneDetect XTone1Lo

#define xLineData8 XTone1Hi

#define Ximpulse ParamHL

TimerToneDecode:
;        mov C,PushC1
;        push PSW

        mov DPL,AddrToneDetectLo
        mov DPH,AddrToneDetectHi
;        xch     A,R7
;        xch     A,DPH
;        xch     A,R6
;        xch     A,DPL
;        mov     R5,A
;        mov     A,#1
;        xch     A,R4
        mov A,OutByte
;        lcall   X0368
        mov     R1,#EndBuffTone
        mov     XrlByte,A
X9be3:   dec     R1
         clr     A
         movc    A,@A+DPTR
         inc     DPTR
         xrl     A,XrlByte
;         setb    C
         add A,#(ToneFreqTbl0-$-3-1)<<1
         rrc     A
         movc    A,@A+PC
         addc    A,@R1
         mov     @R1,A
        cjne    R1,#StartBuffTone,X9be3
        djnz    TCXToneDetect,NoEndToneDetect
         clr     TR1
NoEndToneDetect:
        mov AddrToneDetectLo,DPL
        mov AddrToneDetectHi,DPH
;        mov     A,R5
;        xch     A,DPL
;        xch     A,R6
;        xch     A,DPH
;        xch     A,R7
;        pop PSW
        ret
;!!!!!!!!!!!!!!!!!!
MinLimitToneFreq            = 0x1e
MinLimitHighQualityToneFreq = 0x32
;Lo: 1eh - 21mhz!!!
;Hi: 32h - 21mhz!!!
DecodeToneFreq:
        mov     R5,#0
        mov     R4,#0
        mov     R3,#4
AgainDecodeToneFreq:
         mov     A,@R1
         inc     R1
         add     A,@R1
         inc     R1
         cjne    A,#MinLimitToneFreq,$+3
         jb ToneHighQualityDetect,NoTestHighQuality
         cjne    A,#MinLimitHighQualityToneFreq,$+3
NoTestHighQuality:
         jc      NoToneFreqBigger
          cjne    A,_R+5,$+3
          jc      NoToneFreqBigger
           mov     R5,A
           mov     R4,_R+3
NoToneFreqBigger:
        djnz    R3,AgainDecodeToneFreq
        mov     A,R4
        ret
ToneFreqTbl0:
 db 0x00,0x01,0x01,0x02,0x01,0x02,0x02,0x03
 db 0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04
 db 0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04
 db 0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05,0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05

 db 0x03,0x04,0x04,0x05,0x04,0x05,0x05,0x06,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04
 db 0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05,0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05
 db 0x03,0x04,0x04,0x05,0x04,0x05,0x05,0x06,0x02,0x03,0x03,0x04,0x03,0x04,0x04,0x05
 db 0x03,0x04,0x04,0x05,0x04,0x05,0x05,0x06,0x03,0x04,0x04,0x05,0x04,0x05,0x05,0x06

 db 0x04,0x05,0x05,0x06,0x05,0x06,0x06,0x07
x9ceb:
 db 0x00,0xFF,0xFE,0xFF,0x01,0x00,0x00,0xFF,0x01,0x00,0x02,0xFF,0x01,0xFE,0xFE,0xFE
 db 0xFF,0xF0,0xFF,0xF0,0xFE,0xE0,0xFC,0xE0,0xF8,0xC1,0xF0,0xC3,0xF0,0xC3,0xE1,0x87
 db 0x00,0x07,0x00,0x0F,0x03,0x3F,0x07,0x7F,0x3E,0xF0,0x78,0xE0,0xF0,0xC3,0xE1,0x87
 db 0x7F,0xFC,0xFF,0xF0,0xF8,0xC0,0xE0,0x01,0x0F,0x3E,0x3E,0xF0,0xF8,0xC1,0xE3,0x8F
 db 0xC0,0x01,0x00,0x0F,0x07,0x7F,0x3F,0xF8,0x83,0x0F,0x1F,0x7C,0x78,0xE1,0xC3,0x0F
 db 0x1F,0xFF,0xFF,0xF0,0xF0,0x00,0x81,0x0F,0xF0,0x83,0x07,0x3E,0x78,0xE0,0xC3,0x0F
 db 0xF0,0x00,0x00,0x0F,0x1F,0xFE,0xFC,0xC0,0x7C,0xE0,0x83,0x0F,0x3C,0xF0,0x87,0x1E
 db 0x07,0x7F,0xFF,0xF0,0xE0,0x03,0x0F,0x7F,0x1F,0xFC,0xE1,0x07,0x3C,0xF0,0x87,0x1E
 db 0xFC,0xC0,0x00,0x0F,0x3F,0xFC,0xE0,0x03,0x07,0x1F,0xF0,0xC3,0x3E,0xF8,0x8F,0x1C
 db 0x01,0x3F,0xFF,0xF0,0x80,0x07,0x3F,0xF8,0xC0,0x07,0x78,0xE0,0x1E,0x78,0x0F,0x3C
 db 0xFF,0xE0,0x00,0x0F,0x7F,0xF0,0x01,0x0F,0xF8,0xC1,0x3E,0xF0,0x1F,0x78,0x0F,0x3C
 db 0x00,0x0F,0xFF,0xF0,0x01,0x1F,0xF8,0xC0,0x3E,0xF0,0x1F,0x7C,0x0F,0x3C,0x1E,0x78
 db 0x7F,0xF8,0x00,0x0F,0xFC,0xE0,0x0F,0x7E,0x0F,0x3E,0x07,0x3E,0x0F,0x3C,0x1E,0x78
 db 0xC0,0x03,0xFF,0xF8,0x03,0x3F,0xE0,0x03,0x83,0x0F,0x83,0x0F,0x07,0x3E,0x1C,0x70
 db 0x1F,0xFE,0x80,0x07,0xF8,0x80,0x7F,0xF8,0xF0,0x83,0xE1,0x07,0x87,0x1E,0x3C,0xF0
 db 0xF0,0x00,0x7F,0xF8,0x0F,0x7F,0x01,0x1F,0x7C,0xE0,0xF0,0xC3,0x87,0x1F,0x3C,0xF0
 db 0x0F,0xFF,0x80,0x07,0xF0,0x01,0xF8,0xC0,0x1F,0xFC,0x78,0xE0,0xC3,0x0F,0x78,0xE1
 db 0xF8,0x80,0x7F,0xF8,0x1F,0xFE,0x0F,0xFE,0x07,0x1F,0x3E,0xF0,0xC3,0x0F,0x78,0xE1
 db 0x03,0x3F,0x80,0x07,0xC0,0x03,0xC0,0x03,0xC0,0x07,0x1F,0x7C,0xE1,0x07,0x70,0xE3
 db 0xFE,0xE0,0x7F,0xF8,0x3F,0xF8,0x7F,0xF0,0xF8,0xC1,0x07,0x3E,0xE1,0x87,0xF0,0xC3
 db 0x00,0x0F,0x80,0x07,0x80,0x07,0x03,0x1F,0x3E,0xF0,0x83,0x0F,0xE0,0x87,0xF0,0xC3
 db 0xFF,0xF8,0x7F,0xF8,0xFE,0xF0,0xF8,0xC0,0x0F,0x3E,0xE1,0x07,0xF0,0xC3,0xE1,0x87
 db 0x80,0x03,0x80,0x07,0x01,0x1F,0x1F,0xFE,0x83,0x0F,0xF0,0x83,0xF0,0xC3,0xE1,0x87
 db 0x3F,0xFE,0x7F,0xF8,0xFC,0xC0,0xC0,0x07,0xF0,0x83,0xF8,0xE1,0xF8,0xE1,0xE3,0x8F
 db 0xE0,0x01,0x80,0x07,0x07,0x3F,0x7E,0xF0,0x7C,0xE0,0x3C,0xF0,0x78,0xE1,0xC3,0x0F
 db 0x0F,0xFF,0x7F,0xF8,0xF8,0x80,0x03,0x1F,0x1F,0xFC,0x1F,0x78,0x78,0xE0,0xC3,0x0F
 db 0xF8,0x00,0xC0,0x03,0x0F,0xFF,0xF0,0x80,0x07,0x1F,0x0F,0x3E,0x3C,0xF0,0x87,0x1E
 db 0x03,0x7F,0x3F,0xFC,0xE0,0x01,0x1F,0xFC,0xE0,0x07,0x83,0x1F,0x3C,0xF0,0x87,0x1E
 db 0xFE,0xC0,0xC0,0x03,0x1F,0xFC,0xC0,0x07,0xF8,0xC1,0xC1,0x07,0x1E,0xF8,0x8F,0x1C
 db 0x00,0x1F,0x3F,0xFC,0xC0,0x03,0xFE,0xF0,0x3E,0xF8,0xF0,0x83,0x1E,0x78,0x0F,0x3C
 db 0xFF,0xF0,0xC0,0x03,0x7F,0xF8,0x03,0x3F,0x0F,0x3E,0xF8,0xE1,0x1F,0x7C,0x0F,0x3C
 db 0x80,0x07,0x3F,0xFC,0x80,0x0F,0xF0,0x81,0x81,0x0F,0x3C,0xF0,0x0F,0x3C,0x1E,0x78
 db 0x7F,0xFC,0xC0,0x03,0xFE,0xE0,0x1F,0xFC,0xF0,0x83,0x1F,0x78,0x0F,0x3C,0x1E,0x78
 db 0xC0,0x01,0x3F,0xFC,0x03,0x1F,0x80,0x07,0x7C,0xE0,0x0F,0x3E,0x07,0x1E,0x1C,0x78
 db 0x1F,0xFF,0xC0,0x03,0xFC,0xC0,0xFE,0xE0,0x1F,0x7C,0x83,0x1F,0x87,0x1E,0x3C,0xF0
 db 0xF0,0x00,0x3F,0xFC,0x07,0x7F,0x07,0x3F,0x07,0x1F,0xC1,0x07,0x83,0x1F,0x3C,0xF0
 db 0x07,0x7F,0xC0,0x03,0xF0,0x80,0xF0,0x81,0xE0,0x07,0xF0,0x83,0xC3,0x0F,0x78,0xE1
;21mhz th0=70h
;16mhz th0=92h
#define ToneDetect_f0 0x95
ToneDetect:
        mov ParamHH,ParamLHd
        mov ParamLL,#LenBuffTone
        call stack_malloc
        call StopPlay
        mov     TCXToneDetect,#24h
        clr     A
        mov     R1,#StartBuffTone
        mov     DPTR,#x9ceb
        mov     TH1,#ToneDetect_f0
        mov     R4,#10h
X9b6f:   clr     A
         movc    A,@A+DPTR
         inc     DPTR
         mov     @R1,A
         inc     R1
        djnz    R4,X9b6f
 ;jmp NoToneDetected

        mov     AddrToneDetectLo,DPL
        mov     AddrToneDetectHi,DPH
;        mov     R1,#40h
;        mov     R4,#1
        mov xLineData8,#0x01
        clr EndKvantDecode
        setb LineData
        setb DetectingTone
        call StartT1_8
        call StartGetFreqBeep
WaitEndToneDetect:
         call GetFreqBeep
         jnb EndKvantDecode,NoNextDecodeKvant
          clr EndKvantDecode
          call TimerToneDecode
NoNextDecodeKvant:
        jb      TR1,WaitEndToneDetect
        mov     R1,#EndBuffTone
X9b90:   dec     R1
         mov     A,@R1
         cjne    A,#90h,$+3
         mov     A,#90h
         jc      X9b9a
          xch     A,@R1
X9b9a:   clr     c
         subb    A,@R1
         mov     @R1,A
        cjne    R1,#StartBuffTone,X9b90
        lcall   DecodeToneFreq
        jz      NoToneDetected
        mov     R2,A
        lcall   DecodeToneFreq
        jz      NoToneDetected
        dec     A
        rl      A
        rl      A
        add     A,R2
        mov     R2,A
        mov     A,R2
        add A,#ToneTbl-$-3-1
        movc    A,@A+pc

;        mov R7,#LenBuffTone
;        call stack_mfreelast

        jmp ExitToneDetect
;        ret
ToneTbl:
 db 0x01,0x02,0x03,0x0C,0x04,0x05,0x06,0x0C,0x07,0x08,0x09,0x0C,0x0A,0x00,0x0B,0x0C
NoToneDetected:
        mov     A,#0Ch
ExitToneDetect:
        push A
        mov ParamLL,#LenBuffTone
        call stack_mfreelast

        call AgainGetFreq
        pop A
;        mov ParamLL,A
        mov R0,ParamHHd
        mov @R0,A
        inc R0
        mov A,Ximpulse
        mov @R0,A
        ret


;ClearToneBuff:
;         mov     R0,#StartBuffTone+9
;AgainClearToneBuff:
;         dec     R0
;         mov     @R0,#0
;        cjne    R0,#StartBuffTone,AgainClearToneBuff
;        ret

ToneDebug:
;           mov R5,#ParamLLd
;           call ToneDetect
;          ; call BeepDetect
;           mov R0,#VideoBuffer
;           mov @R0,#7
;           inc R0
;           mov @R0,ParamLLd
;
;;           inc R0
;;           mov @R0,#0
;;           inc R0
;;           mov @R0,VideoAdrLo
;;           inc R0
;;           mov @R0,#7
;;           inc R0
;;           mov @R0,#0xFF
;;           inc R0
;;           mov @R0,#0
;;           inc R0
;;           mov @R0,#0xFF
;;           inc R0
;;           mov @R0,#MigType2|7
;;           inc R0
;;           mov @R0,#0xFF
;           inc R0
;           mov @R0,#7
;           inc R0
;           mov A,ParamLH
;
;           mov @R0,A
;           inc R0
;           mov @R0,#7
;           inc R0
;           clr A
;           mov C,Line
;           mov ACC.7,C
;           mov C,LinePresent
;           mov ACC.0,C
;           mov @R0,A
;
;           inc R0
;           mov @R0,#7
;           inc R0
;           jnb EndReciveNumeral,NNNN
;            mov @R0,RecivedNumeral
;NNNN:      mov A,@R0
;           mov C,EndReciveNumeral
;           mov ACC.7,C
;           mov @R0,A
;           clr EndReciveNumeral
;
;           inc R0
;           mov @R0,#7
;           inc R0
;           mov @R0,ImpulseNumeral
;
;           inc R0
;           mov @R0,#7
;           inc R0
;;           mov @R0,DebugLBell
;
;           inc R0
;           mov @R0,#7
;           inc R0
;           mov @R0,LBellMin
;
;           inc R0
;           mov @R0,#7
;           inc R0
;           mov @R0,LBellMax
;
;;           inc VideoAdrLo
;          jnb KeyPresent,ToneDebug
          ret
;------------------------------------------------------------
StartGetFreqBeep:
                 mov C,LineData
                 mov OldLineData,C
                 mov Ximpulse,#0

                 mov TH2,#High(KvantTimeBeep)
                 mov TL2,#Low(KvantTimeBeep)
                 mov T2MOD,#0xFC
                 mov T2CON,#0x04
                 jmp xxLineEQ
;                 ret
;------------------------------------------------------------
#define MinTBeep      670
#define OldTL2 VideoAdrLo
#define OldTH2 VideoAdrHi
xxLineEQ:
          mov A,TL2
          add A,#3
          mov OldTL2,A
          mov A,TH2
          mov OldTH2,A
          ret
GetFreqBeep:
        jb LineData,xxLine1
         jnb OldLineData,xxLineEQ
         jmp  xxLineNoEQ
xxLine1: jb OldLineData,xxLineEQ
xxLineNoEQ:
            mov A,TL2
            add A,#5
            clr C
            subb A,OldTL2
            mov B,A
            mov A,TH2
            subb A,OldTH2
            xch A,B
            cjne A,#Low(MinTBeep),$+3
            mov A,B
            subb A,#High(MinTBeep)
            jc NoIncImpulse
             inc Ximpulse
             mov C,LineData
             mov OldLineData,C
NoIncImpulse:
            ret
;------------------------------------------------------------
BeepDetect:
           call StartGetFreqBeep
AgainGetFreq:
            call GetFreqBeep
            jb EndWavPlay,ExitBeepDetect
           jb TR2,AgainGetFreq
ExitBeepDetect:
           clr TR2
           mov ParamLLd,Ximpulse
           ret
; oldline line
;   0      0     0
;   0      1     0
;   1      0     +
;   1      1     0
  RSEG BITVARS
OldLineData: DS 1
ToneHighQualityDetect: DS 1

 END